--SQL Code Drop Table

DROP TABLE ROOM CASCADE CONSTRAINTS;
DROP TABLE STAFF CASCADE CONSTRAINTS;
DROP TABLE STUDENT CASCADE CONSTRAINTS;
DROP TABLE BOOKING CASCADE CONSTRAINTS;

--SQL Code Table Creation

--Room 
CREATE TABLE ROOM(
ROOM_ID VARCHAR2(20),
ROOM_NAME VARCHAR2(25),
ROOM_BLOCK VARCHAR2(1),
ROOM_FLOOR NUMBER,
ROOM_CAP NUMBER,
CONSTRAINT ROOM_ROOM_ID_PK PRIMARY KEY (ROOM_ID));


--Staff
CREATE TABLE STAFF(
STAFF_ID NUMBER CONSTRAINT STAFF_STAFF_ID_PK PRIMARY KEY,
STAFF_NAME VARCHAR2(30)CONSTRAINT STAFF_STAFF_NAME_NN NOT NULL,
STAFF_DEPT VARCHAR(20),
STAFF_SALARY NUMBER);


--Student
CREATE TABLE STUDENT(
STUDENT_ID NUMBER CONSTRAINT STUDENT_STUDENT_ID_PK PRIMARY KEY,
STUDENT_NAME VARCHAR2(30)CONSTRAINT STUDENT_STUDENT_NAME_NN NOT NULL,
STUDENT_YEAR NUMBER,
STUDENT_DEPT VARCHAR(20));


--Booking
CREATE TABLE BOOKING(
BOOK_ID NUMBER,
BOOK_DATE DATE,
BOOK_START DATE,
BOOK_END DATE,
ROOM_ID VARCHAR2(20),
STAFF_ID NUMBER,
STUDENT_ID NUMBER,
CONSTRAINT BOOKING_BOOK_ID_PK PRIMARY KEY (BOOK_ID),
CONSTRAINT BOOKING_ROOM_ID_FK FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID),
CONSTRAINT BOOKING_STAFF_ID_FK FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID),
CONSTRAINT BOOKING_STUDENT_ID_FK FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID));

--Populate the Table
--Table ROOM
INSERT INTO ROOM
VALUES('TL 06 D5', 'Teaching Lab 6', 'D', 5, 20);
INSERT INTO ROOM
VALUES('TL 05 D5', 'Teaching Lab 5', 'D', 5, 20);
INSERT INTO ROOM
VALUES('TL 04 D5', 'Teaching Lab 4', 'D', 5, 20);
INSERT INTO ROOM
VALUES('TL 03 D5', 'Teaching Lab 3', 'D', 5, 20);
INSERT INTO ROOM
VALUES('LT 02 D4', 'Lecture Theatre 2', 'D', 4, 40);
INSERT INTO ROOM
VALUES('LR 15 D3', 'Lecture Room 15', 'D', 3, 20);
INSERT INTO ROOM
VALUES('LR 10 D2', 'Lecture Room 10', 'D', 2, 30);
INSERT INTO ROOM
VALUES('LR 05 D1', 'Lecture Room 1', 'D', 1, 30);
INSERT INTO ROOM
VALUES('TL 10 E5', 'Teaching Lab 10', 'E', 5, 20);
INSERT INTO ROOM
VALUES('TL 08 E5', 'Teaching Lab 8', 'E', 5, 25);
INSERT INTO ROOM
VALUES('TL 07 E5', 'Teaching Lab 7', 'E', 5, 25);
INSERT INTO ROOM
VALUES('TL 04 E4', 'Teaching Lab 4', 'E', 4, 15);
INSERT INTO ROOM
VALUES('TL 03 E4', 'Teaching Lab 3', 'E', 4, 20);
INSERT INTO ROOM
VALUES('LR 13 E3', 'Lecture Room 13', 'E', 3, 25);
INSERT INTO ROOM
VALUES('LR 08 E2', 'Lecture Room 8', 'E', 2, 30);
INSERT INTO ROOM
VALUES('LR 03 E1', 'Lecture Room 3', 'E', 1, 20);
INSERT INTO ROOM
VALUES('CR 01 C5', 'Conference Room 1', 'C', 5, 50);
INSERT INTO ROOM
VALUES('CITA L 03 C1', 'CITA Lab 3', 'C', 1, 25);
INSERT INTO ROOM
VALUES('CITA L 02 C1', 'CITA Lab 2', 'C', 1, 25);
INSERT INTO ROOM
VALUES('CITA L 01 C1', 'CITA Lab 1', 'C', 1, 20);
INSERT INTO ROOM
VALUES('GH 01 A2', 'General hall 1', 'A', 2, 100);


--Table STAFF
INSERT INTO STAFF VALUES (101, 'Ahmad Syafiq', 'BCS',3500 );
INSERT INTO STAFF VALUES (102, 'Siti Hasmah', 'BIT', 2900);
INSERT INTO STAFF VALUES (103, 'Mohammad Jalalludin', 'BCS', 3100);
INSERT INTO STAFF VALUES (104, 'Fatimah Syakirin', 'BIT', 4000);
INSERT INTO STAFF VALUES (105, 'Abdul Jamal', 'BCS', 3900);
INSERT INTO STAFF VALUES (106, 'Aisha', 'BIT', 4500);
INSERT INTO STAFF VALUES (107, 'Ali Jahal', 'BCS', 2590);
INSERT INTO STAFF VALUES (108, 'Nur Safiah Said', 'BIT', 3700);
INSERT INTO STAFF VALUES (109, 'Hassan Mamun', 'BCS', 3000);
INSERT INTO STAFF VALUES (110, 'Zara Uniqlo', 'BIT', 7200);
INSERT INTO STAFF VALUES (111, 'Ahmed Albab', 'BCS', 5200);
INSERT INTO STAFF VALUES (112, 'Lina', 'BIT', 6100);


--Table STUDENT
 INSERT INTO STUDENT VALUES (201, 'Abdul Syakur', 3, 'BCS');
 INSERT INTO STUDENT VALUES (202, 'Ahmad Firdaus', 2, 'BIT');
 INSERT INTO STUDENT VALUES (203, 'Mohammad Quwaiz', 4, 'BCS');
 INSERT INTO STUDENT VALUES (204, 'Syaza Atira', 3, 'BIT');
 INSERT INTO STUDENT VALUES (205, 'Fawwaz Aiman', 3, 'BCS');
 INSERT INTO STUDENT VALUES (206, 'Aisyah Humairah', 1, 'BIT');
 INSERT INTO STUDENT VALUES (207, 'Azim Aziz', 1, 'BCS');
 INSERT INTO STUDENT VALUES (208, 'Dayang Aziedah', 4, 'BIT');
 INSERT INTO STUDENT VALUES (209, 'Mohammad Azman', 2, 'BCS');
 INSERT INTO STUDENT VALUES (210, 'Nur Syifa', 2, 'BCS');


--Table BOOKING

INSERT INTO BOOKING
VALUES (1001, TO_DATE('2023-01-03','YYYY-MM-DD'), TO_DATE('2023-01-05','YYYY-MM-DD'), TO_DATE('2023-01-07','YYYY-MM-DD'), 'TL 10 E5', 103, 204);

INSERT INTO BOOKING
VALUES (1002, TO_DATE('2023-01-03','YYYY-MM-DD'), TO_DATE('2023-01-07','YYYY-MM-DD'), TO_DATE('2023-01-09','YYYY-MM-DD'), 'LR 05 D1', 103, 203);

INSERT INTO BOOKING
VALUES (1003, TO_DATE('2023-01-03','YYYY-MM-DD'), TO_DATE('2023-02-01','YYYY-MM-DD'), TO_DATE('2023-02-07','YYYY-MM-DD'), 'TL 03 E4', 103, 201);

INSERT INTO BOOKING
VALUES (1004, TO_DATE('2023-01-04','YYYY-MM-DD'), TO_DATE('2023-01-07','YYYY-MM-DD'), TO_DATE('2023-01-11','YYYY-MM-DD'), 'CR 01 C5', 105, 210);

INSERT INTO BOOKING
VALUES (1005, TO_DATE('2023-01-07','YYYY-MM-DD'), TO_DATE('2023-02-03','YYYY-MM-DD'), TO_DATE('2023-02-04','YYYY-MM-DD'), 'CITA L 03 C1', 107, 206);

INSERT INTO BOOKING
VALUES (1006, TO_DATE('2023-01-09','YYYY-MM-DD'), TO_DATE('2023-01-10','YYYY-MM-DD'), TO_DATE('2023-01-16','YYYY-MM-DD'), 'LR 05 D1', 109, 202);

INSERT INTO BOOKING
VALUES (1007, TO_DATE('2023-01-09','YYYY-MM-DD'), TO_DATE('2023-01-12','YYYY-MM-DD'), TO_DATE('2023-01-17','YYYY-MM-DD'), 'CR 01 C5', 109, 207);

INSERT INTO BOOKING
VALUES (1008, TO_DATE('2023-01-09','YYYY-MM-DD'), TO_DATE('2023-01-24','YYYY-MM-DD'), TO_DATE('2023-01-27','YYYY-MM-DD'), 'TL 03 E4', 109, 204);

INSERT INTO BOOKING
VALUES (1009, TO_DATE('2023-01-10','YYYY-MM-DD'), TO_DATE('2023-01-14','YYYY-MM-DD'), TO_DATE('2023-01-15','YYYY-MM-DD'), 'TL 03 D5', 112, 208);

INSERT INTO BOOKING
VALUES (1010, TO_DATE('2023-01-10','YYYY-MM-DD'), TO_DATE('2023-01-12','YYYY-MM-DD'), TO_DATE('2023-01-16','YYYY-MM-DD'), 'TL 04 D5', 112, 206);

INSERT INTO BOOKING
VALUES (1011, TO_DATE('2023-01-10','YYYY-MM-DD'), TO_DATE('2023-02-06','YYYY-MM-DD'), TO_DATE('2023-02-13','YYYY-MM-DD'), 'LR 15 D3', 104, 203);

INSERT INTO BOOKING
VALUES (1012, TO_DATE('2023-01-10','YYYY-MM-DD'), TO_DATE('2023-01-15','YYYY-MM-DD'), TO_DATE('2023-01-16','YYYY-MM-DD'), 'TL 07 E5', 104, 202);

INSERT INTO BOOKING
VALUES (1013, TO_DATE('2023-01-12','YYYY-MM-DD'), TO_DATE('2023-01-21','YYYY-MM-DD'), TO_DATE('2023-01-23','YYYY-MM-DD'), 'LR 05 D1', 106, 207);

INSERT INTO BOOKING
VALUES (1014, TO_DATE('2023-01-12','YYYY-MM-DD'), TO_DATE('2023-02-01','YYYY-MM-DD'), TO_DATE('2023-02-02','YYYY-MM-DD'), 'CITA L 03 C1', 106, 205);

INSERT INTO BOOKING
VALUES (1015, TO_DATE('2023-01-15','YYYY-MM-DD'), TO_DATE('2023-02-01','YYYY-MM-DD'), TO_DATE('2023-02-05','YYYY-MM-DD'), 'GH 01 A2', 110, 209);

INSERT INTO BOOKING
VALUES (1016, TO_DATE('2023-01-19','YYYY-MM-DD'), TO_DATE('2023-01-21','YYYY-MM-DD'), TO_DATE('2023-01-24','YYYY-MM-DD'), 'LR 03 E1', 111, 209);

--Data Manipulation

-- change format: ‘TL 05 E2’ into ‘TL-05-E2’
UPDATE ROOM
SET ROOM_ID = REPLACE(REPLACE(ROOM_ID, ' ', '-'), '-', ' ')
WHERE ROOM_ID LIKE '% %';


--Procedures

-- Add Booking--
CREATE OR REPLACE PROCEDURE ADD_BOOKING 
(P_STUDENT_ID     BOOKING.STUDENT_ID%TYPE,
P_STAFF_ID        BOOKING.STAFF_ID%TYPE,
P_ROOM_ID         BOOKING.ROOM_ID%TYPE,
P_BOOK_START      BOOKING.BOOK_START%TYPE,
P_BOOK_END        BOOKING.BOOK_END%TYPE)
AS
BEGIN
    INSERT INTO BOOKING (STUDENT_ID, STAFF_ID, ROOM_ID, BOOK_START, BOOK_END)
    VALUES (P_STUDENT_ID,P_STAFF_ID,P_ROOM_ID,P_BOOK_START,P_BOOK_END);
END ADD_BOOKING;
/

--find booking--

CREATE OR REPLACE PROCEDURE 
FIND_BOOKING(BOOK_ID NUMBER)
IS
BEGIN
SELECT BOOK_ID FROM BOOKING WHERE BOOK_ID = &BOOK_ID;
END FIND_BOOKING;
/

--Edit booking--

CREATE OR REPLACE PROCEDURE 
EDIT_BOOKING(BOOK_ID NUMBER)
IS
BEGIN
UPDATE BOOKING SET BOOK_ID WHERE BOOK_ID = &BOOK_ID;
END EDIT_BOOKING;
/

--Cancel booking--

CREATE OR REPLACE PROCEDURE
CANCEL_BOOKING(BOOK_ID NUMBER)
IS
BEGINDELETE BOOK_ID FROM BOOKING WHERE BOOK_ID = &BOOK_ID;
END CANCEL_BOOKING;
/

--Find venue capacity--

CREATE OR REPLACE PROCEDURE
FIND_VENUE_CAPACITY(ROOM_ID NUMBER, ROOM_NAME VARCHAR2)
IS
BEGIN
SELECT ROOM_ID, ROOM_NAME FROM ROOM WHERE ROOM_CAP > 30;
END CANCEL_BOOKING;
/

--Functions
/*Number of bookings that have been made by the staff.*/

CREATE OR REPLACE FUNCTION
NO_OF_BOOK_STAFF_F(BOOK_STAFF NUMBER)
RETURN NUMBER
IS
    TOTAL_BOOK_STAFF NUMBER;
BEGIN
    SELECT COUNT(*) INTO TOTAL_BOOK_STAFF
    FROM BOOKING
    WHERE STAFF_ID = BOOK_STAFF;
    RETURN TOTAL_BOOK_STAFF;
END;
/

/*Calling NO_OF_BOOK_STAFF_F*/

ACCEPT input_StaffID PROMPT 'Enter Staff ID: '
SELECT NO_OF_BOOK_STAFF_F(&input_StaffID) AS BookingCount FROM DUAL;

--Venue availability on a specific date

CREATE OR REPLACE FUNCTION 
CHECK_ROOM_AVAILABILITY_F(AVAILABLE_ROOM VARCHAR2, AVAILABLE_DATE DATE)
RETURN VARCHAR2
IS
    V_AVAILABILITY VARCHAR2(30);
BEGIN
    SELECT CASE
        WHEN COUNT(*) > 0 THEN 'The Room Is Already Booked'
        ELSE 'The Room Is Available'
    END INTO V_AVAILABILITY
    FROM BOOKING
    WHERE ROOM_ID = AVAILABLE_ROOM
    AND AVAILABLE_DATE BETWEEN BOOK_START AND BOOK_END;

    RETURN V_AVAILABILITY;
END;
/

-- Calling CHECK_ROOM_AVAILABILITY_F

ACCEPT input_RoomID PROMPT 'Enter Room ID: '
ACCEPT input_Date PROMPT 'Enter Date "YYYY-MM-DD": '
SELECT Check_Room_Availability_F('&input_RoomID', TO_DATE('&input_date', 'YYYY-MM-DD')) AS RoomAvailability FROM DUAL;

--What venue is available on specific date

CREATE OR REPLACE FUNCTION 
CHECK_ROOM_DATE_AVAILABILTY_F(DATE_AVAILABILITY IN DATE)
RETURN SYS_REFCURSOR
IS
    V_RESULT SYS_REFCURSOR;
BEGIN
    OPEN V_RESULT FOR
        SELECT ROOM_ID, ROOM_NAME
        FROM ROOM
        WHERE ROOM_ID NOT IN (
            SELECT DISTINCT ROOM_ID
            FROM BOOKING
            WHERE DATE_AVAILABILITY BETWEEN BOOK_START AND BOOK_END
        );
    RETURN V_RESULT;
END;
/

-- Calling CHECK_ROOM_DATE_AVAILABILTY_F
ACCEPT input_date PROMPT 'Enter Date (YYYY-MM-DD): '
DECLARE
    v_AvailableRooms SYS_REFCURSOR;
    v_RoomId VARCHAR2(20);
    v_RoomName VARCHAR2(25);
    v_DateAvailability DATE := TO_DATE('&input_date', 'YYYY-MM-DD');
BEGIN
    v_AvailableRooms := CHECK_ROOM_DATE_AVAILABILTY_F(v_DateAvailability);

    LOOP
        FETCH v_AvailableRooms INTO v_RoomId, v_RoomName;
        EXIT WHEN v_AvailableRooms%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('Room ID: ' || v_RoomId || '       Room Name: ' || v_RoomName);
    END LOOP;

    CLOSE v_AvailableRooms;
END;
/


